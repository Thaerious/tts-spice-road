-- deal a single card from the deck of 'type'
-- invoke 'callback when done'
-- this will recurse index + 1 until all empty locations are filled
-- type {"actionCards", "pointCards"}
function dealNextCard(deckType, index, callback)
   callback = callback or function() end
   local scriptingZoneName = deckType .. "ScriptingZone"
   local max = #keys[deckType];
   local zone = getObjectFromGUID(keys[scriptingZoneName][index])

   if zone == nil then
       if callback ~= nil then callback() end
       return
   end

   local parameters = {
       position = zone.getPosition(),
       flip = true,
       index = 0,
       callback_function = function(card)
           Wait.time(function() card.setLock(true) end, 0.5)
           nextIndex = index + 1;
           dealNextCard(deckType, nextIndex, callback)
       end
   }

   local deck = getObjectFromGUID(keys[deckType]);

   local card = nil
   if deck == nil then
       card = getObjectAt(loc.decks[deckType], "card")
       if card ~= nil then
           card.flip()
           card.setPosition(zone.getPosition(), false, false)
           card.setLock(true)
       end
       Wait.time(callback, 0.5) -- moving cards left expects dealing to be done
   else
       card = deck.takeObject(parameters);
   end

   if card ~= nil then card.setVar("index", index) end
end

function moveCardToHand(card, playerColor)
   card.setLock(false);
   local player = Player[playerColor];
   local hand = player.getHandTransform(1);
   card.setPositionSmooth(hand.position, false, true);
   local rotation = hand.rotation
   rotation.y = (rotation.y + 180) % 360
   card.setRotation(rotation)
   card.call("resetState")
   card.setVar("state", "ready") -- bug quasher
end

function placeCardBesideCaravan(card, playerColor)
    -- place the card beside the spice board
    local hand = Player[playerColor].getHandTransform(1)
    local playerCard = getObjectFromGUID(keys.caravanCards[playerColor]);

    local d = 9;
    local rPos = playerCard.getTransformRight();
    local cPos = playerCard.getPosition();

    local nPos = {
        x = cPos.x - rPos.x * d,
        y = cPos.y - rPos.y * d,
        z = cPos.z - rPos.z * d
    }

    nPos.x = nPos.x + (#gameModel.players[playerColor].pointCards * 0.5)
    nPos.z = nPos.z + (#gameModel.players[playerColor].pointCards * -0.5)

    card.setPositionSmooth(nPos, false, false);
    local rotation = hand.rotation
    rotation.y = (rotation.y + 180) % 360
    card.setRotation(rotation);
end

function sortActionCards(color, menuPos)
    local caravanCard = getObjectFromGUID(keys.caravanCardZone[color])
    local pos = caravanCard.getPosition();
    pos.x = pos.x - 6
    pos.z = pos.z - 7.1
    pos.y = 1
 
    local j = 1
    for i,guid in ipairs(gameModel.players[color].actionCards) do
        local obj = getObjectFromGUID(guid)
        if isInHand(obj, color) == false then
            obj.setRotation({x=0, y=180, z=0})
            obj.setPosition(pos)
            pos.x = pos.x + 2
            pos.y = pos.y + 0.01
            j = j + 1
        end
 
        if j > 10 then
            j = 1
            pos.z = pos.z - 6.1
            pos.x = caravanCard.getPosition().x - 6
        end
    end
 end