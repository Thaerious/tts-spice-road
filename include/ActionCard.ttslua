#include Utility

state = "spent"

log(self.getGUID())

function onSave()
    local data = {}
    if owner ~= nil then data.owner = owner end
    if index ~= nil then data.index = index end
    if ready ~= nil then data.ready = ready end
    if state ~= nil then data.state = state end
    if count ~= nil then data.count = count end
    return JSON.encode(data)
end

function onLoad(json)
    if json == "" or json == nil then return end
    local data = JSON.decode(json)
    if data.owner ~= nil then owner = data.owner end
    if data.index ~= nil then index = data.index end
    if data.ready ~= nil then ready = data.ready end
    if data.state ~= nil then state = data.state end
    if data.count ~= nil then count = data.count end
end

-- trigger when a valid action card is dropped
function onDrop(color)
    local gameModel = Global.getTable("gameModel");
    local isInHand = isInHand(card, color)

    if isInHand == false and state ~= "spent" and color == gameModel.currentPlayer then --
        self.registerCollisions()
        setupContextMenu(card) -- provided including files
    elseif isInHand == true then
        self.unregisterCollisions()
        resetState() -- provided in including files
    end
end

function onCollisionEnter(collisionInfo)
    local gameModel = Global.getTable("gameModel");
    if isActiveSpent() == false and self.getGUID() ~= gameModel.active.guid then
        setActive() -- provided in including files
    end
end

function isActiveSpent()
    local gameModel = Global.getVar("gameModel")
    if gameModel.active.guid == "" then return false end
    local activeCard = getObjectFromGUID(gameModel.active.guid)
    return activeCard.getVar("state") == "spent"
end